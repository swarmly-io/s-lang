# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
   branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools
        python -m pip install wheel
        python -m pip install twine
        python -m pip install keyrings.google-artifactregistry-auth
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - id: 'auth'
      env:
        GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GOOGLE_CREDENTIALS }}'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Upload to Artifact Registry
      run: |
        gcloud config set artifacts/repository foo
        gcloud config set artifacts/location us-central1
        gcloud config set account github-gcr-service-account@norrin-radd.iam.gserviceaccount.com
        
        gcloud auth activate-service-account swarmly-git@rare-ethos-384523.iam.gserviceaccount.com --key-file=$GOOGLE_APPLICATION_CREDENTIALS --project=norrin-radd
        
        gcloud artifacts print-settings python > ~/.pypirc
        python -m twine upload --repository rprod dist/*
